/*L
 * Copyright The General Hospital Corporation d/b/a Massachusetts General Hospital
 *
 * Distributed under the OSI-approved BSD 3-Clause License.
 * See http://ncip.github.com/digital-model-repository/LICENSE.txt for details.
 */

package org.cvit.cabig.dmr.common;

import java.rmi.RemoteException;

/** 
 * This class is autogenerated, DO NOT EDIT.
 * 
 * This interface represents the API which is accessable on the grid service from the client. 
 * 
 * @created by Introduce Toolkit version 1.2
 * 
 */
public interface DmrI {

  /**
   * Stores a new Entry in DMR. Returns the Entry with DMR-assigned Entry.id.
   *
   * @param newEntry
   * @param fundingOrganization
   */
  public org.cvit.cabig.dmr.domain.Entry addEntry(org.cvit.cabig.dmr.domain.Entry newEntry,org.cvit.cabig.dmr.domain.Organization fundingOrganization) throws RemoteException ;

  /**
   * Adds the provided Data to the DMR and sets association to Entry identified by sourceEntry. If Data already exists in DMR, method will only set association. If Data does not exist in DMR, Data will be added. Returns the DataClassification with DMR-assigned DataClassification.id.
   *
   * @param data
   * @param sourceEntry
   */
  public org.cvit.cabig.dmr.domain.DataClassification addDataToEntry(org.cvit.cabig.dmr.domain.DataClassification data,org.cvit.cabig.dmr.domain.Entry sourceEntry) throws RemoteException ;

  /**
   * Adds the given Reference to the Entry identified by entryId
   *
   * @param reference
   * @param sourceEntry
   */
  public org.cvit.cabig.dmr.domain.Reference addReferenceToEntry(org.cvit.cabig.dmr.domain.Reference reference,org.cvit.cabig.dmr.domain.Entry sourceEntry) throws RemoteException ;

  /**
   * Modify the content of the Entry (update fields) with the given Entry. Entry.id must match an existing Entry in the DMR
   *
   * @param entry
   */
  public void updateEntry(org.cvit.cabig.dmr.domain.Entry entry) throws RemoteException ;

  /**
   * Modifies the content of an existing Reference within the DMR
   *
   * @param reference
   */
  public void updateReference(org.cvit.cabig.dmr.domain.Reference reference) throws RemoteException ;

  /**
   * Modifies the content of an existing Data value in the DMR.
   *
   * @param data
   */
  public void updateData(org.cvit.cabig.dmr.domain.DataClassification data) throws RemoteException ;

  public org.oasis.wsrf.properties.GetMultipleResourcePropertiesResponse getMultipleResourceProperties(org.oasis.wsrf.properties.GetMultipleResourceProperties_Element params) throws RemoteException ;

  public org.oasis.wsrf.properties.GetResourcePropertyResponse getResourceProperty(javax.xml.namespace.QName params) throws RemoteException ;

  public org.oasis.wsrf.properties.QueryResourcePropertiesResponse queryResourceProperties(org.oasis.wsrf.properties.QueryResourceProperties_Element params) throws RemoteException ;

  /**
   * The standard caGrid Data Service query method.
   *
   * @param cqlQuery
   *	The CQL query to be executed against the data source.
   * @return The result of executing the CQL query against the data source.
   * @throws QueryProcessingException
   *	Thrown when an error occurs in processing a CQL query
   * @throws MalformedQueryException
   *	Thrown when a query is found to be improperly formed
   */
  public gov.nih.nci.cagrid.cqlresultset.CQLQueryResults query(gov.nih.nci.cagrid.cqlquery.CQLQuery cqlQuery) throws RemoteException, gov.nih.nci.cagrid.data.faults.QueryProcessingExceptionType, gov.nih.nci.cagrid.data.faults.MalformedQueryExceptionType ;

}

